name: Example CI Django + Postgres Tests

# Controls when the workflows will run
on:
  # Allows you to call this workflows within another workflows
  workflow_call:
  # Allows you to run this workflows manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  push:
    branches: #319_CI-CD
  pull_request:
    branches: #319_CI-CD


# A workflows run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflows contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Add in environment variables for the entire "build" job
    env:
      POSTGRES_USER: ${{ secret.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secret.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secret.POSTGRES_DB }}
      POSTGRES_PORT: 5432
      DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
      DATABASE_URL: psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      DJANGO_SECRET_KEY: 0dog&f7cf3d$vyyh58%2g$j#!9@pj38!vj!2*%@$p9+3r579w&
    services:
      postgres_main:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    # If you want to test multiple python version(s)
    strategy:
      matrix:
        python-version: ["3.11"] # ["3.8", "3.9", "3.10"]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run Tests
        # Step specific environment variables
        env:
          DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DB_USERNAME: ${{ env.POSTGRES_USER }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_DATABASE: ${{ env.POSTGRES_DB }}
          DB_PORT: ${{ env.POSTGRES_PORT }}
        run: |
          python manage.py test
