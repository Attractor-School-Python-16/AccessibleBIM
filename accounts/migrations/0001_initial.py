# Generated by Django 4.1.10 on 2023-09-20 19:25

import accounts.models.custom_user
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('father_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='father name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email_verified')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='phone_number')),
                ('job_title', models.CharField(blank=True, max_length=150, null=True, verbose_name='job_title')),
                ('company', models.CharField(blank=True, max_length=150, null=True, verbose_name='company_name')),
                ('type_corp', models.IntegerField(choices=[(1, 'entrepreneur'), (2, 'limited_liability_company'), (3, 'opened joint stock company'), (4, 'closed joint stock company'), (5, 'additional liability company'), (6, 'state company'), (7, 'other typecorp')], default=7, verbose_name='company_type')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            managers=[
                ('objects', accounts.models.custom_user.CustomUserManager()),
            ],
        ),
    ]
